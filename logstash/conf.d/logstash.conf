input {
    file {
        path => "/full/path/to/file"
        start_position => "beginning"
        codec => multiline {
            auto_flush_interval => 10
            pattern => "^\[\*\*\]"
            negate => "true"
            what => "previous"
        }
    }
}
filter {

    ## Parsing event with Grok patterns
    grok {
        ### [**] [1:2123:5] INDICATOR-COMPROMISE Microsoft cmd.exe banner [**]\n[Classification: Successful Administrator Privilege Gain] [Priority: 1] \n01/13-21:50:42.040365 192.168.1.2:53 -> 192.168.1.3:1396\nTCP TTL:64 TOS:0x0 ID:1997 IpLen:20 DgmLen:128 DF\n***AP*** Seq: 0xBD0F2FED  Ack: 0x23C533C0  Win: 0xFFFF  TcpLen: 20\n[Xref => http://cgi.nessus.org/plugins/dump.php3?id=11633]
        match => {
            "message" => "\[\*\*\]\s*\[(?<threat_id>[^\]]+)\]\s*(?<Name_of_the_threat>.*)\s*\[\*\*\]\n\[Classification:\s*(?<Classification>[^\]]+)\]\s*\[Priority:\s*(?<Priority>[^\]]+)\]\s*\n(?<date>%{MONTHNUM}\/%{MONTHDAY})[-](?<time>%{TIME})\s*%{IP:scr_ip}:%{POSINT:src_port} -> %{IP:dst_ip}:%{POSINT:dst_port}\s*\n(?<packet_type>\w+)\s*TTL:%{INT:TTL}\s*TOS:%{WORD:TOS}\s*ID:%{INT:ID}\s*IpLen:%{INT:IpLen}\s*DgmLen:%{INT:DgmLen}\s*DF\s*\n(?<Fragmetation>[^\s]+)\s*Seq:\s*%{WORD:Seq}\s*Ack:\s*%{WORD:Ack}\s*Win:\s*%{WORD:Win}\s*TcpLen:\s*%{INT:TcpLen}\s*\n\[Xref => (?<Xref>[^\]]+)\]"

        }

    }
    ## Convert some not string vlaues to integer
    mutate {
            convert => {
                "TTL" => "integer"
                "Priority"  => "integer"
                "TcpLen" => "integer"
                "DgmLen" => "integer"
                "src_port" => "integer"
                "IpLen" => "integer"
                "dst_port" => "integer"
                "ID" => "integer"
            }
    }

    ## Create timestamp field
    if [date] and [time] {
        mutate {
            add_field => {
                "timestamp" => "%{date}-%{time}"
            }
        }
        ## parsing timestamp to @timestamp
        ## "timestamp" => "01/13-21:50:42.040365"
        date {
            match => ["timestamp", "MM/dd-HH:mm:ss.SSSSSS"]
            remove_field => ["timestamp"]
        }
    }

    
}


output {
    elasticsearch {
        index => "threats-%{+YYYY.MM.dd}"
    }
}
